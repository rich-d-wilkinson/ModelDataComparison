{
    "collab_server" : "",
    "contents" : "## Test the understanding of the code using a toy example:\n#\ninstall.packages(\"rgdal\")\n# 1. Pick the three locations on the sphere: The aim is to predict the value at the mid-point\nlon_known <- array(c(10,130), dim=c(2,1))\nlat_known <- array(c(50,50), dim=c(2,1))\n#the three points lie on the same latitude and prescribe an arc along part of a great circle.\n#\nval <- array(c(0,10), dim=c(2,1)) \ndata_fit <- cbind(lon_known, lat_known, val)\ncolnames(data_fit) <- c(\"lon\",\"lat\",\"val\")\nlon_unknown <- 11\nlat_unknown <- 50\ndata_pred <- cbind(lon_unknown, lat_unknown)\ncolnames(data_pred) <- c(\"lon\",\"lat\")\n#data assigning etc. done. \n#\ndata_fit <- data.frame(data_fit)\ndata_pred <- data.frame(data_pred)\nattach(data_fit)\ncoordinates(data_fit) = ~ lon + lat\nattach(data_pred)\ncoordinates(data_pred) = ~ lon + lat \n#proj4string(data_pred) <- CRS(\"+init=epsg:4326\") #this is a lon,lat grid projection of the Earth (I believe.)\n#proj4string(data_fit) <- CRS(\"+init=epsg:4326\") #this is a lon,lat grid projection of the Earth (I believe.)\n#Found this other example on github gstat:\nproj4string(data_pred) <- CRS(\"+proj=longlat\") #this is a lon,lat grid projection of the Earth (I believe.)\nproj4string(data_fit) <- CRS(\"+proj=longlat\") #this is a lon,lat grid projection of the Earth (I believe.)\ndata_fit.ll = spTransform(data_fit, CRS(\"+proj=longlat +ellps=WGS84\"))\ndata_pred.ll = spTransform(data_pred, CRS(\"+proj=longlat +ellps=WGS84\"))\n#proj4string(data_pred) <- CRS(\"+init=epsg:54030\") #this is a lon,lat grid projection of the Earth (I believe.)\n#proj4string(data_fit) <- CRS(\"+init=epsg:54030\") #this is a lon,lat grid projection of the Earth (I believe.)\n#proj4string(data_pred) <- CRS(\"+init=epsg:54009\") #this is a lon,lat grid projection of the Earth (I believe.)\n#proj4string(data_fit) <- CRS(\"+init=epsg:54009\") #this is a lon,lat grid projection of the Earth (I believe.)\n## All projetions give the same value for a number of different coordinate entries. \nmodel.choice <- vgm(psill =  3, \"Exp\", range = 2.949, nugget = 0.1) \nm1.krige <- krige(val ~ 1, locations=data_fit, newdata=data_pred, model = model.choice)\n#\n# How does this compare to the theoretical version? \nm1.krige@data$var1.pred #ordinary kriging value \n#####\n# transformed projection:\nmodel.choice <- vgm(psill =  3, \"Exp\", range = 2.949, nugget = 0.1) \nm1.krige <- krige(val ~ 1, locations=data_fit.ll, newdata=data_pred.ll, model = model.choice)\n#\n# How does this compare to the theoretical version? \nm1.krige@data$var1.pred #ordinary kriging value \n\n###### change the projection:\ndata_fit2 <- data.frame(data_fit)\ndata_pred2 <- data.frame(data_pred)\nattach(data_fit2)\ncoordinates(data_fit2) = ~ lon + lat\nattach(data_pred2)\ncoordinates(data_pred2) = ~ lon + lat \nproj4string(data_pred2) <- CRS(\"+init=epsg:54030\") \nproj4string(data_fit2) <- CRS(\"+init=epsg:54030\") \n#proj4string(data_pred) <- CRS(\"+init=epsg:54009\") \n#proj4string(data_fit) <- CRS(\"+init=epsg:54009\") \n## All projetions give the same value for a number of different coordinate entries. \nmodel.choice <- vgm(psill =  3, \"Exp\", range = 2.949, nugget = 0.1) \nm1.krige <- krige(val ~ 1, locations=data_fit2, newdata=data_pred2, model = model.choice)\n#\n# How does this compare to the theoretical version? \nm1.krige@data$var1.pred #ordinary kriging value \n\n\n\n#Theoretical caclulation:\nexp.Vgm <- function(pred.points, fit.points, psill, rang, nugget){\n  dist.mat <- dist2(pred.points, fit.points, method=\"euclidean\")\n  vgm.mat <- nugget + (psill - nugget)*(1 - exp(3*dist.mat/rang))\n  return(vgm.mat)\n} \nvgm.data <- exp.vgm(data_pred, data_fit[,1:2],0.99,0.95,0.05)\n\n\n",
    "created" : 1488447926577.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2747637177",
    "id" : "4D31658",
    "lastKnownWriteTime" : 1488385991,
    "last_content_update" : 1488385991,
    "path" : "C:/Users/sm1pjp/Google Drive/Paelo Stuff/DMC/Scripts/gstatkrige_ToyExampleTesting.R",
    "project_path" : "gstatkrige_ToyExampleTesting.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}